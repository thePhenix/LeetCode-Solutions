{"id":864844973,"lang":"csharp","lang_name":"C#","time":"12Â months","timestamp":1671898976,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/864844973/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"43 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public bool HasCycle(ListNode head) {\n        if(head == null || head.next == null){\n            return false;\n        }\n        var slow = head;\n        var fast = head.next.next;\n\n        while(fast != null && fast.next != null)\n        {\n            if(slow == fast){\n                return true;\n            }\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}