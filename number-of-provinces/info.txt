{"id":1001534605,"lang":"csharp","lang_name":"C#","time":"5Â months","timestamp":1690088167,"status":10,"status_display":"Accepted","runtime":"134 ms","url":"/submissions/detail/1001534605/","is_pending":"Not Pending","title":"Number of Provinces","memory":"47.2 MB","code":"public class Solution {\n    public void Bfs(int[][] isConnected, bool[] visited, int item, int n){\n        var queue = new Queue<int>();\n        queue.Enqueue(item);\n        while(queue.Count() > 0){\n            item = queue.Peek();\n            queue.Dequeue();\n            visited[item] = true;\n            for(var i=0; i<n;i++){\n                if(!visited[i] && isConnected[item][i]==1){\n                    queue.Enqueue(i);\n                }\n            }\n        }\n    }\n\n    public int FindCircleNum(int[][] isConnected) {\n        if(isConnected.Length > 0){\n            int len = isConnected.GetLength(0);\n            bool[] visited = new bool[len];\n            for(var x = 0; x < len; x++){\n                visited[x] = false;\n            }\n\n            int provinceCount = 0;\n\n            for(var x = 0; x < len; x++){\n                if(!visited[x]){\n                    provinceCount++;\n                    Bfs(isConnected, visited,x, len);\n                }\n            }\n\n            return provinceCount;\n        }\n\n        return 0;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}