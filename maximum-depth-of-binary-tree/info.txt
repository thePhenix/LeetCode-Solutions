{"id":800774896,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1663274387,"status":10,"status_display":"Accepted","runtime":"167 ms","url":"/submissions/detail/800774896/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"38.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public int FindSolution(TreeNode root, int level){\n        if(root == null){\n            return level - 1;\n        }\n        \n        var leftHeight = FindSolution(root.left, level + 1);\n        var rightHeight = FindSolution(root.right, level + 1);\n        \n        return leftHeight > rightHeight ? leftHeight : rightHeight;\n    }\n    \n    public int MaxDepth(TreeNode root) {\n        var height = FindSolution(root, 1);\n        return height;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}