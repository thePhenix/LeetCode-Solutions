{"id":802153216,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1663431718,"status":10,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/802153216/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"39.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public bool IsSymmetric(TreeNode root1, TreeNode root2){\n        if(root1 == null && root2 == null){\n            return true;\n        }\n        \n        if(root1 == null || root2 == null){\n            return false;\n        }\n        \n        if(root1.val != root2.val){\n            return false;\n        }\n        \n        return IsSymmetric(root1.left, root2.right) && IsSymmetric(root1.right, root2.left);\n    }\n    public bool IsSymmetric(TreeNode root) {\n        var result = IsSymmetric(root.left, root.right);\n        return result;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}