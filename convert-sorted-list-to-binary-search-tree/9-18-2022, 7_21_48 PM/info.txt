{"id":802885134,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1663507308,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/802885134/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"41.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public TreeNode ConvertBST(ListNode head, ListNode tail){\n        if(head == tail){\n            return null;\n        }\n        \n        ListNode fast = head;\n        ListNode slow = head;\n        \n        while(fast != tail){\n            fast = fast.next;\n            if(fast != tail){\n                fast = fast.next;\n                slow = slow.next;\n            }\n        }\n        \n        var root = new TreeNode(slow.val);\n        root.left = ConvertBST(head, slow);\n        root.right = ConvertBST(slow.next, tail);\n        \n        return root;\n    }\n    \n    public TreeNode SortedListToBST(ListNode head) {\n        return ConvertBST(head, null);\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false,"flag_type":1}