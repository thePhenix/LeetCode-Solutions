{"id":792114929,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 3 months","timestamp":1662384107,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/792114929/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"44.1 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar traverse = (root, level,result) => {\n    if(!root){\n        return;\n    }\n    \n    if(!result[level]){\n        result[level] = [];\n    }\n    \n    result[level].push(root.val);\n    \n    traverse(root.left, level + 1, result);        \n    traverse(root.right, level + 1, result);\n}\n\nvar levelOrder = function(root) {\n    var result = [];\n    traverse(root, 0, result);\n    return result;\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}