{"id":645517876,"lang":"csharp","lang_name":"C#","time":"1 year, 10 months","timestamp":1645390041,"status":10,"status_display":"Accepted","runtime":"127 ms","url":"/submissions/detail/645517876/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"39.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {\n        int sum;\n            var reminder = 0;\n            var head = new ListNode();\n            var tail = head;\n\n            while (l1 != null && l2 != null)\n            {\n                sum = l1.val + l2.val;\n                sum += reminder;\n                tail.val = sum % 10;\n                \n                reminder = sum / 10;\n\n                l1 = l1.next;\n                l2 = l2.next;\n                if (l1 != null || l2 != null)\n                {\n                    tail.next = new ListNode();\n                    tail = tail.next;\n                }\n            }\n\n            while (l1 != null)\n            {\n                sum = l1.val + reminder;\n                reminder = sum / 10;\n\n                tail.val = sum % 10;\n\n                l1 = l1.next;\n                if (l1 != null)\n                {\n                    tail.next = new ListNode();\n                    tail = tail.next;\n                }\n            }\n\n            while (l2 != null)\n            {\n                sum = l2.val + reminder;\n                reminder = sum / 10;\n\n                tail.val = sum % 10;\n\n                l2 = l2.next;\n                if (l2 != null)\n                {\n                    tail.next = new ListNode();\n                    tail = tail.next;\n                }\n            }\n\n            while (reminder != 0)\n            {\n                tail.next = new ListNode();\n                tail = tail.next;\n                tail.val = reminder % 10;\n                reminder /= 10;\n            }\n\n            return head;\n    }\n}","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"flag_type":1}