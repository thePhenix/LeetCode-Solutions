{"id":792062104,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1662378500,"status":10,"status_display":"Accepted","runtime":"262 ms","url":"/submissions/detail/792062104/","is_pending":"Not Pending","title":"N-ary Tree Postorder Traversal","memory":"45.2 MB","code":"/*\n// Definition for a Node.\npublic class Node {\n    public int val;\n    public IList<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, IList<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n}\n*/\n\npublic class Solution {\n    public void Traverse(Node root, List<int> result){\n        if(root == null){\n            return;\n        }\n        \n        foreach(var child in root.children){\n            Traverse(child, result);\n        }\n        \n        result.Add(root.val);\n    }\n    \n    public IList<int> Postorder(Node root) {\n        var result = new List<int>();\n        Traverse(root, result);\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-postorder-traversal","has_notes":false,"flag_type":1}