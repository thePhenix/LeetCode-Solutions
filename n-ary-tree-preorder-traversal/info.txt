{"id":792055315,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1662377731,"status":10,"status_display":"Accepted","runtime":"285 ms","url":"/submissions/detail/792055315/","is_pending":"Not Pending","title":"N-ary Tree Preorder Traversal","memory":"45.6 MB","code":"/*\n// Definition for a Node.\npublic class Node {\n    public int val;\n    public IList<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val,IList<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n}\n*/\n\npublic class Solution {\n    public IList<int> Traverse(Node root, List<int> result){\n        if(root == null){\n            return result;\n        }\n        \n        result.Add(root.val);\n        \n        if(root.children != null){\n            foreach(var child in root.children){\n                Traverse(child, result);\n            }\n        }\n        \n        return result;\n    }\n    \n    public IList<int> Preorder(Node root) {\n        var result = new List<int>();\n        return Traverse(root, result);\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-preorder-traversal","has_notes":false,"flag_type":1}