{"id":1013127869,"lang":"csharp","lang_name":"C#","time":"4 months, 2 weeks","timestamp":1691255486,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/1013127869/","is_pending":"Not Pending","title":"Robot Return to Origin","memory":"41.4 MB","code":"public class Solution {\n    public bool JudgeCircle(string moves) {\n        int up = 0;\n        int down = 0;\n        int left = 0;\n        int right = 0;\n\n        for(var i = 0; i < moves.Length; i++){\n            var dir = moves[i];\n            if(dir == 'U'){\n                up++;\n            }\n            else if(dir == 'D'){\n                down++;\n            }\n            else if(dir == 'L'){\n                left++;\n            }\n            else if(dir == 'R'){\n                right++;\n            }\n        }\n\n        return (left == right) && (up == down);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"robot-return-to-origin","has_notes":false,"flag_type":1}