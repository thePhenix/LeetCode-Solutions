{"id":794134766,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1662577701,"status":10,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/794134766/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"36.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public bool FindSol(TreeNode root, bool res){\n        if (root == null)\n            {\n                return res;\n            }\n\n            if (root.val == 1)\n            {\n                res = true;\n            }\n        \n            var leftTree = FindSol(root.left, false);\n            var rightTree = FindSol(root.right, false);\n\n            res = leftTree || rightTree || res;\n        \n            if(!leftTree){\n                root.left = null;\n            }\n        \n            if(!rightTree){\n                root.right = null;\n            }\n\n            return res;\n    }\n    \n    public TreeNode PruneTree(TreeNode root) {\n        \n        var res = FindSol(root, false);\n        if(!res){\n            return null;\n        }\n        return root;\n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"binary-tree-pruning","has_notes":false,"flag_type":1}