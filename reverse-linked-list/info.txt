{"id":806592249,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1663908733,"status":10,"status_display":"Accepted","runtime":"162 ms","url":"/submissions/detail/806592249/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"37.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode ReverseList(ListNode head) {\n        ListNode prev = null;\n        ListNode next = null;\n        \n        while(head != null){\n            next = head.next;\n            head.next = prev;\n            prev = head;\n            head = next;\n        }\n        \n        return prev;\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}