{"id":1002818840,"lang":"csharp","lang_name":"C#","time":"5Â months","timestamp":1690218005,"status":10,"status_display":"Accepted","runtime":"520 ms","url":"/submissions/detail/1002818840/","is_pending":"Not Pending","title":"Non-overlapping Intervals","memory":"71.3 MB","code":"public class Solution {\n    public int EraseOverlapIntervals(int[][] intervals) {\n        var sorted = intervals.OrderBy(x => x[0]).ThenBy(y => y[1]).ToList();\n            var min = sorted[0][0];\n            var max = sorted[0][1];\n            int count = 0;\n            for (var i = 1; i < sorted.Count(); i++)\n            {\n                if (sorted[i][0] < max)\n                {\n                    count++;\n                    if (sorted[i][1] < max)\n                    {\n                        min = sorted[i][0];\n                        max = sorted[i][1];\n                    }\n                }\n                else\n                {\n                    min = sorted[i][0];\n                    max = sorted[i][1];\n                }\n            }\n\n            return count;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"non-overlapping-intervals","has_notes":false,"flag_type":1}