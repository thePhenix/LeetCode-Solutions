{"id":806691016,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1663919583,"status":10,"status_display":"Accepted","runtime":"251 ms","url":"/submissions/detail/806691016/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"56.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\npublic class Solution {\n    public bool IsPalindrome(ListNode head) {\n        var list = new List<int>();\n        \n        while(head != null){\n            list.Add(head.val);\n            head = head.next;\n        }\n        \n        var i = 0;\n        var j = list.Count() - 1;\n        while(i < j){\n            if(list[i++] != list[j--]){\n                return false;\n            }\n        }\n        \n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}