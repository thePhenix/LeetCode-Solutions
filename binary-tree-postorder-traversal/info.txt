{"id":792060340,"lang":"csharp","lang_name":"C#","time":"1 year, 3 months","timestamp":1662378304,"status":10,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/792060340/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"42.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public void Traverse(TreeNode root, List<int> result){\n        if(root == null){\n            return;\n        }\n        \n        Traverse(root.left, result);\n        Traverse(root.right, result);\n        result.Add(root.val);\n    }\n    \n    public IList<int> PostorderTraversal(TreeNode root) {\n        var result = new List<int>();\n        Traverse(root, result);\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}